tbl(dat, township ~ sex)
tbl(dat, township ~ commtype)
tbl(dat, commtype)
tbl(dat,commtype)
tbl(dat,~ commtype)
table1
table2
table3
table4a
table4b
table1 %>%
mutate(rate = cases / population * 10000)
table1 %>%
count(year, wt = cases)
ggplot(table1, aes(year, cases)) +
geom_line(aes(group = country), colour = "grey50") +
geom_point(aes(colour = country))
table4a %>%
gather(`1999`, `2000`, key = "year", value = "cases")
table4b %>%
gather(`1999`, `2000`, key = "year", value = "population")
table2
spread(table2, key = type, value = count)
health <- data.frame(id = rep(1:10, each = 4, len = 40),
trial = rep(c(1:4), 10),
score = rnorm(40, 3, .75))
health[1:10, ]
health_wide <- reshape(health, v.names = "score", idvar = "id",
timevar = "trial", direction = "wide")
health_wide[1:5, ]
head(reshape(health_wide))
health_long <- reshape(health_wide, idvar = "id", direction = "long")
health_long[1:15, ]
format(Sys.Date(),format="%m %d %Y")
format(Sys.Date(),format="%m - %d %Y")
format(Sys.Date(),format="%m - %d - %Y")
as_datetime(today())
library(lubridate)
as_datetime(today())
(datetime <- ymd_hms("2016-07-08 12:34:56"))
year(datetime) <- 2020
datetime
library(tidyverse)
library(tidyverse)
library(haven)
cgss2003 <- read_sav("../data/CGSS2003b.sav")
str(cgss2003$sitetype)
attr(cgss2003$sitetype,"label")
attr(cgss2003$sitetype,"labels")
attr(cgss2003$sitetype,"names")
attr(attr(cgss2003$sitetype,"labels"),"names")
attr(attr(cgss2003$sitetype,"labels"),"names")[7]
cgss2003  %>%
select(birth05) %>%
sjlabelled::zap_labels() %>%
qplot()
cgss2003  %>%
select(birth05) %>%
sjlabelled::zap_labels() %>%
qplot(x=birth05,data=.,binwidth=5)
cgss <- foreign::read.spss("../data/CGSS2003.sav"
,reencode = "GB2312",
to.data.frame=TRUE,max.value.labels=50)
table(cgss$sex)
write.csv(bike,"bike.csv")
getwd()
health <- data.frame(id = rep(1:10, each = 4, len = 40),
trial = rep(c(1:4), 10),
score = rnorm(40, 3, .75))
health
health2 <- spread(health,key=trial,value=score)
health2
health1 <- gather(health2,`1`,`2`,`3`,`4`,key="trial",value="score")
health1$trial <- as.numeric(health1$trial)
health1 <- gather(health2,`1`,`2`,`3`,`4`,key="trial",value="score")
350*5*3
350*6*3
320+280
1580*400
library(raster)
library(rgdal)
library(tidyverse)
library(mapproj)
library(jpeg)
library(grid)
library(maptools)
library(sp)
#读入外部数据
library(readxl)
# 拼接图片
library(jpeg)
library(png)
library(grid)
library(magick)
library(RColorBrewer)
library(classInt)
if(!require(MASS)) install.packages("MASS")
data(UScereal)
head(UScereal)
hist(UScereal$calories, breaks = 15)
hist(UScereal$calories, bin = 15)
hist(UScereal$calories, breaks = 15)
boxplot(UScereal$calories, horizontal = TRUE)
barplot(table(UScereal$shelf))
plot(UScereal$shelf,type="p")
barplot(add.margin(table(UScereal$shelf)))
barplot(margin.table(table(UScereal$shelf)))
barplot(margin.table(table(UScereal$shelf)),1)
barplot(margin.table(table(UScereal$shelf)),2)
margin.table(table(UScereal$shelf))
(table(UScereal$shelf))
barplot(prop.table(table(UScereal$shelf))))
barplot(prop.table(table(UScereal$shelf)))
plot(x = UScereal$sugars, y = UScereal$calories)
plot(calories ~ sugars, data = UScereal) # formula notation
plot(UScereal[, c(2:8, 10)]) # 8个变量的scatterplot matrix
boxplot(sugars ~ shelf, data = UScereal, horizontal = TRUE)
plot(calories ~ sugars, data = UScereal, col = shelf)
legend('topright', inset = .05, legend = c(3,2,1),
fill = c('green', 'red', 'black'))
plot(calories ~ sugars, data = UScereal, ylab = 'Calories',
xlab = 'Sugars (grams)', main = 'Nutrition of a Single Cup of Cereal')
plot(calories ~ sugars, data = UScereal, ann = FALSE)
title(main = 'Nutrition of a Single Cup of Cereal', ylab = 'Calories',
xlab = 'Sugars (grams)') # add afterwards
plot(calories ~ sugars, data = UScereal, col = shelf)
legend('topleft', inset = .05, legend = c(3,2,1),
fill = c('green', 'red', 'black'))
plot(calories ~ sugars, data = UScereal, pch = 15)
plot(calories ~ sugars, data = UScereal, pch = 19, col = shelf, bg = shelf)
legend('topright', inset = .05, legend = c(3,2,1),
fill = c('green', 'red', 'black'))
palette(c('#e5f5f9', '#99d8c9', '#2ca25f'))
plot(calories ~ sugars, data = UScereal, pch = 19, col = shelf, bg = shelf)
legend('topright', inset = .05, legend = c(3,2,1),
fill = c('#e5f5f9', '#99d8c9', '#2ca25f'))
plot(calories ~ sugars, data = UScereal, pch = shelf,col=shelf)
palette("default")
plot(calories ~ sugars, data = UScereal, col=shelf)
plot(calories ~ sugars, data = UScereal, pch = 15)
text(UScereal$sugars, UScereal$calories, row.names(UScereal),
col = "red", pos = 1, cex = .5)  ##可以测试学生帮助的使用1
plot(calories ~ sugars, data = UScereal, pch = 15)
text(UScereal$sugars, UScereal$calories, UScereal$mfr, col = "blue", pos = 2)
plot(calories ~ sugars, data = UScereal, pch = 19)
outliers <- UScereal[which(UScereal$calories > 300),]
text(outliers$sugars, outliers$calories - 15, labels = row.names(outliers))
plot(calories ~ sugars, data = UScereal, pch = 19)
identify(UScereal$carbo, UScereal$calories, n = 2, labels = row.names(UScereal))
plot(calories ~ sugars, data = UScereal, pch = 19, ylim = c(0, 325))
plot(calories ~ sugars, data = UScereal, pch = 19, ann = FALSE, cex = 1.5)
outliers <- UScereal[which(UScereal$calories > 300),]
text(outliers$sugars, outliers$calories - 15,
labels = row.names(outliers), cex = .75)
title(main = 'Nutrition of a Single Cup of Cereal', ylab = 'Calories',
xlab = 'Sugars (grams)', cex.main = 2, cex.lab = 1.5)
par(mfrow = c(2, 2))
hist(UScereal$calories, breaks = 15)
boxplot(sugars ~ shelf, data = UScereal)
hist(UScereal$sugars, breaks = 15)
boxplot(calories ~ shelf, data = UScereal)
par(mfrow = c(1, 1))
names(par())
par("col")
plot(c(0, 1), c(0, 1), type="n", xlab="", ylab="")  # coordinate system
plot(c(0, 1), c(0, 1), type="n", xlab="", ylab="", axes=FALSE) # w/o axes
names(par())
par("col")  # graphical parameters color
?par
# 例如，将作图窗口分为1行*2列
par(mfrow=c(1, 2))
plot(1:25, pch=1:25, xlab="Symbol Number", ylab="")  # symbols
lines(1:25, type="S", lty="dashed") # type p l b c o s S h
## 字符、轴、外边框
plot(26:1, pch=letters, xlab="letters", ylab="",
axes=FALSE, frame.plot=TRUE)
# no plot
plot(c(1, 7), c(0, 1), type="n", axes=FALSE,  # lines
xlab="Line Type (lty)", ylab="")
# add frame
box()
axis(1, at=1:6)  # x-axis 1 在南 2在西 3在北 4 在东
axis(2, at=c(0,0.5,1))
for (lty in 1:6)
lines(c(lty, lty, lty + 1), c(0, 0.5, 1), lty=lty)
plot(c(0, 1), c(0, 1), type="n", xlab="", ylab="")
axis(1, at=1:6)  # x-axis 1 在南 2在西 3在北 4 在东
axis(2, at=c(0,0.5,1))
for (lty in 1:6)
lines(c(lty, lty, lty + 1), c(0, 0.5, 1), lty=lty)
plot(c(0, 1), c(0, 1), type="n", xlab="", ylab="")
abline(0, 1) # intercept and slope 加参照线
abline(c(1, -1), lty="dashed")  # 过两点
# horizontal and vertical lines:
abline(h=seq(0, 1, by=0.1), v=seq(0, 1, by=0.1), col="gray")
axis(1, at=1:6)  # x-axis 1 在南 2在西 3在北 4 在东
axis(2, at=c(0,0.5,1))
for (lty in 1:6)
lines(c(lty, lty, lty + 1), c(0, 0.5, 1), lty=lty)
box()
system("java -version")
$(/usr/libexec/java_home)
remove.packages("rJava")
install.packages("rJava", type = "source")
remove.packages("rJava")
remove.packages("rJava")
install.packages("rJava", type = "source")
install.packages("rJava", type = "source")
system("java -version")
if (!require(maps)) install.packages("maps")
if (!require(maptools)) install.packages("maptools")
if (!require(sp)) install.packages("sp")
if (!require(spdep)) install.packages("spdep")
if (!require(gstat)) install.packages("gstat")
if (!require(splancs)) install.packages("splancs")
if (!require(spatstat)) install.packages("spatstat")
if (!require(pgirmess)) install.packages("pgirmess")
if (!require(RColorBrewer)) install.packages("RColorBrewer")
if (!require(classInt)) install.packages("classInt")
if (!require(spgwr)) install.packages("spgwr")
if (!require(spgwr)) install.packages("spgwr")
library(maps)         ## Projections
library(maptools)     ## Data management
library(sp)           ## Data management
library(spdep)        ## Spatial autocorrelation
library(gstat)        ## Geostatistics
library(splancs)      ## Kernel Density
library(spatstat)     ## Geostatistics
library(pgirmess)     ## Spatial autocorrelation
library(RColorBrewer) ## Visualization
library(classInt)     ## Class intervals
library(spgwr)        ## GWR
45/0.157
468/2980
install.packages("text2vec")
# 相似性
library(stringr)
library(text2vec)
data("movie_review")
# select 500 rows for faster running times
movie_review = movie_review[1:500, ]
prep_fun = function(x) {
x %>%
# make text lower case
str_to_lower %>%
# remove non-alphanumeric symbols
str_replace_all("[^[:alnum:]]", " ") %>%
# collapse multiple spaces
str_replace_all("\\s+", " ")
}
movie_review$review_clean = prep_fun(movie_review$review)
#定义两个文档：
doc_set_1 = movie_review[1:300, ]
it1 = itoken(doc_set_1$review_clean, progressbar = FALSE)
# specially take different number of docs in second set
doc_set_2 = movie_review[301:500, ]
it2 = itoken(doc_set_2$review_clean, progressbar = FALSE)
#1、Jaccard距离
dtm1 = create_dtm(it1, vectorizer)
#1、Jaccard距离
vectorizer = hash_vectorizer(2 ^ 18, c(1L, 2L))
dtm1 = create_dtm(it1, vectorizer)
dtm2 = create_dtm(it2, vectorizer)
d1_d2_jac_sim = sim2(dtm1, dtm2, method = "jaccard", norm = "none")
d1_d2_jac_sim
#生成了一个300*200的相似性矩阵。
dtm1_2 = dtm1[1:200, ]
dtm2_2 = dtm2[1:200, ]
d1_d2_jac_psim = psim2(dtm1_2, dtm2_2, method = "jaccard", norm = "none")
str(d1_d2_jac_psim)
#生成了一个200个数值的相似性系数。
#2、cosine距离
d1_d2_cos_sim = sim2(dtm1, dtm2, method = "cosine", norm = "l2")
??consine
install.packages("sos")
library(sos)
findFn("cosine", maxPages=2, sortby="MaxScore")
install.packages("LSAfun")
library("LSAfun")
data(wonderland)
Cosine("alice","rabbit",tvectors=wonderland)
View(wonderland)
libray(lsa)
library(lsa)
cosine("alice","rabbit")
vec1 = c( 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
vec2 = c( 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0 )
cosine(vec1,vec2)
#2、cosine距离
d1_d2_cos_sim = sim2(dtm1, dtm2, method = "cosine", norm = "l2")
d1_d2_cos_sim
#3、Euclidean 距离
x = dtm_tfidf_lsa[1:300, ]
y = dtm_tfidf_lsa[1:200, ]
19*16
12*60
options(baidumap.key = '9c9978a893e2dd6c3be3d3241f8e8f61')
library(baidumap)
library(ggmap)
#查找北京的大学
bj_college = getPlace('大学','北京')
head(bj_college)
bj_college = getPlace('盲人按摩','北京')
head(bj_mersage)
head(bj_college)
library(REmap)
remapB(markPointData = data.frame(bj_college$name),
markPointTheme = markPointControl(symbol = "pin",
effect=F,
symbolSize = 5,
color="red"),
geoData = bj_college)
remapB(markPointData =bj_college$name,
markPointTheme = markPointControl(symbol = "pin",
effect=F,
symbolSize = 5,
color="red"),
geoData = bj_college)
library(ggmap)
q <- get_map("北京",zoom = 9,  source = "stamen",maptype = "toner")
q <- get_map("北京",zoom = 9,  source = "stamen",maptype = "toner")
#作图
p <- ggmap(q) +
geom_point(data = bj_college, aes(lon, lat)) +
theme(text = element_text(family = "STKaiti"))
p
q <- get_map("北京",zoom = 11,  source = "stamen",maptype = "toner")
#作图
p <- ggmap(q) +
geom_point(data = bj_college, aes(lon, lat)) +
theme(text = element_text(family = "STKaiti"))
p
bj_college = getPlace('大学','北京')
head(bj_college)
#google地图获取需要使用北大的vpn，人大的vpn不可用
library(ggmap)
q <- get_map("北京",zoom = 11,  source = "stamen",maptype = "toner")
#作图
ggmap(q) +
geom_point(data = bj_college, aes(lon, lat)) +
theme(text = element_text(family = "STKaiti"))
bj_mersage = getPlace('洗脚','北京')
head(bj_mersage)
ggmap(q) +
geom_point(data = bj_college, aes(lon, lat)) +
theme(text = element_text(family = "STKaiti"))
ggmap(q) +
geom_point(data =bj_mersage , aes(lon, lat)) +
theme(text = element_text(family = "STKaiti"))
bj_mersage = getPlace('足浴','北京')
ggmap(q) +
geom_point(data =bj_mersage , aes(lon, lat)) +
theme(text = element_text(family = "STKaiti"))
bj_mersage = getPlace('足浴','海淀')
ggmap(q) +
geom_point(data =bj_mersage , aes(lon, lat)) +
theme(text = element_text(family = "STKaiti"))
bj_mersage = getPlace('足浴','中关村')
ggmap(q) +
geom_point(data =bj_mersage , aes(lon, lat)) +
theme(text = element_text(family = "STKaiti"))
bj_mersage = getPlace('足浴','北京市朝阳区')
ggmap(q) +
geom_point(data =bj_mersage , aes(lon, lat)) +
theme(text = element_text(family = "STKaiti"))
hd_mersage = getPlace('足浴','北京市海淀区')
cy_mersage = getPlace('足浴','北京市朝阳区')
tz_mersage = getPlace('足浴','北京市通州区')
cp_mersage = getPlace('足浴','北京市昌平区')
sj_mersage = getPlace('足浴','北京市石景山区')
ft_mersage = getPlace('足浴','北京市丰台区')
dx_mersage = getPlace('足浴','北京市大兴区')
dc_mersage = getPlace('足浴','北京市东城区')
xc_mersage = getPlace('足浴','北京市西城区')
cy_mersage = getPlace('足浴','北京市朝阳区')
tz_mersage = getPlace('足浴','北京市通州区')
cp_mersage = getPlace('足浴','北京市昌平区')
sj_mersage = getPlace('足浴','北京市石景山区')
ft_mersage = getPlace('足浴','北京市丰台区')
dx_mersage = getPlace('足浴','北京市大兴区')
dc_mersage = getPlace('足浴','北京市东城区')
xc_mersage = getPlace('足浴','北京市西城区')
mersage <- rbind(hd_mersage,cy_mersage,tz_mersage,cp_mersage,sj_mersage,ft_mersage,dx_mersage,dc_mersage,xc_mersage)
ggmap(q) +
geom_point(data =mersage , aes(lon, lat)) +
theme(text = element_text(family = "STKaiti"))
write.csv(mersage,"/Users/liding/E/Bdata/rtemp/data/massage.csv")
devtools::install_github("dvanclev/GTrendsR")
devtools::install_github("trinker/gtrend")
# 用R绘制google趋势
# install necessary packages
devtools::install_github("dvanclev/GTrendsR")
# 用R绘制google趋势
# install necessary packages
#hubte1g/GTrendsR
devtools::install_github("hubte1g/GTrendsR")
# load the packages
library(curl)
library(dplyr)
library(gtrend)
library(ggplot2)
install.packages("dplyr")
library(dplyr)
0.218 /（0.218 + 1.009）
0.218/(0.218 + 1.009)
730+600+30
730+600+60
library(dplyr)
library(readr)
library(ggplot2)
library(gganimate)
gapminder <- read.csv("/Users/liding/E/Bdata/liding17/2018R/data/gapminder.csv")
table(gapminder[gapminder$year==2007,3])
#选择2007年数据进行分析
gap07 <- gapminder %>%
filter(year == 2007)
qplot(x = gdpPercap, y = lifeExp, data = gap07)
qplot(x = gdpPercap, y = lifeExp, color = continent, data = gap07)
qplot(x = gdpPercap, y = lifeExp, facets = continent, data = gap07)
qplot(x = gdpPercap, y = lifeExp, facets = continent, data = gap07)
qplot(x = gdpPercap, y = lifeExp, color = continent, size = pop,data = gap07)
setwd("/Users/liding/E/Bdata/liding17/2018R/")
getwd()
gapminder_plot <- ggplot(gapminder) +
aes(x = gdpPercap, y = lifeExp, colour = continent, size = pop,
frame = year) +
geom_point(alpha = 0.4) +
scale_x_log10()
# gapminder_plot
gganimate(gapminder_plot, convert='gm convert', filename = "gapminder-gganimate.gif")
library(gganimate)
gganimate(gapminder_plot, convert='gm convert', filename = "gapminder-gganimate.gif")
library(haven)
setwd("/Users/liding/E/Bdata/liding17/2018R/l03workflow")
cgss2003<-read_dta('../data/cgss2003.dta')
View(cgss2003)
cgss2003[cgss2003==-1] <- NA;cgss2003[cgss2003==-2] <- NA;cgss2003[cgss2003==-3] <- NA
#2、丢弃没有用到的取值标签（包括上面特殊缺失值标签）
cgss2003 <- sjlabelled::drop_labels(cgss2003)
#3、label转为因子
cgss2003 <- sjmisc::to_label(cgss2003)
# 将剩下的labelled变量转化为数值变量（原来带特殊值标签的连续变量在此）
w <- which(sapply(cgss2003, class) == 'labelled')
cgss2003[w] <- lapply(cgss2003[w],
function(x) as.numeric(as.character(x))
)
des <- function (dfile) {
lbl = sapply(dfile, attr, 'label')
if (is.list(lbl)) {
lbl[sapply(lbl, is.null)] = ''
lbl[sapply(lbl, length) > 1] = ''
lbl = unlist(lbl)
}
Encoding(lbl) = 'UTF-8'
dfile_var = data.frame(var =names(dfile), lbl = lbl)
View(dfile_var)
}
des(cgss2003)
#出生年份，不呈现缺失值
table(cgss2003$birth) # table不能缩写
birthy<-table(cgss2003$birth,useNA = "ifany")
addmargins(birthy)
data(package="car")
library(car)
data(Duncan)
?Duncan # 查看包中有关数据的背景信息
summary(Duncan)
summary(Duncan$prestige)
attach(Duncan)
prestige
summary(prestige)
plot(Duncan$education ~ Duncan$prestige)
hist(prestige)
pairs(cbind(prestige, income, education))
# 两两散点图、拟合线、直方图。
pairs(cbind(prestige, income, education),
panel=function(x, y){
points(x, y)
abline(lm(y ~ x), lty="dashed")
lines(lowess(x, y))
},
diag.panel=function(x){
par(new=TRUE)
hist(x, main="", axes=FALSE)
}
)
# 定义为一个函数，方便以后使用
scatmat <- function(...) { # user-defined function
pairs(cbind(...),
panel=function(x, y){
points(x, y)
abline(lm(y ~ x), lty=2)
lines(lowess(x, y))
},
diag.panel=function(x){
par(new=TRUE)
hist(x, main="", axes=FALSE)
}
)
}
scatmat(prestige, income, education)
plot(education, income)
identify(education, income, row.names(Duncan)) # must exit from identify mode!
(duncan.model <- lm(prestige ~ income + education))
duncan.model <- lm(prestige ~ income + education)
duncan.model
summary(duncan.model)
detach("Duncan")
prestige
add <- 1 + 2
add
rep(1, times = 10)
