# 例如，将作图窗口分为1行*2列
par(mfrow=c(1, 2))
plot(1:25, pch=1:25, xlab="Symbol Number", ylab="")  # symbols
lines(1:25, type="S", lty="dashed") # type p l b c o s S h
## 字符、轴、外边框
plot(26:1, pch=letters, xlab="letters", ylab="",
axes=FALSE, frame.plot=TRUE)
# no plot
plot(c(1, 7), c(0, 1), type="n", axes=FALSE,  # lines
xlab="Line Type (lty)", ylab="")
# add frame
box()
axis(1, at=1:6)  # x-axis 1 在南 2在西 3在北 4 在东
axis(2, at=c(0,0.5,1))
for (lty in 1:6)
lines(c(lty, lty, lty + 1), c(0, 0.5, 1), lty=lty)
plot(c(0, 1), c(0, 1), type="n", xlab="", ylab="")
axis(1, at=1:6)  # x-axis 1 在南 2在西 3在北 4 在东
axis(2, at=c(0,0.5,1))
for (lty in 1:6)
lines(c(lty, lty, lty + 1), c(0, 0.5, 1), lty=lty)
plot(c(0, 1), c(0, 1), type="n", xlab="", ylab="")
abline(0, 1) # intercept and slope 加参照线
abline(c(1, -1), lty="dashed")  # 过两点
# horizontal and vertical lines:
abline(h=seq(0, 1, by=0.1), v=seq(0, 1, by=0.1), col="gray")
axis(1, at=1:6)  # x-axis 1 在南 2在西 3在北 4 在东
axis(2, at=c(0,0.5,1))
for (lty in 1:6)
lines(c(lty, lty, lty + 1), c(0, 0.5, 1), lty=lty)
box()
system("java -version")
$(/usr/libexec/java_home)
remove.packages("rJava")
install.packages("rJava", type = "source")
remove.packages("rJava")
remove.packages("rJava")
install.packages("rJava", type = "source")
install.packages("rJava", type = "source")
system("java -version")
if (!require(maps)) install.packages("maps")
if (!require(maptools)) install.packages("maptools")
if (!require(sp)) install.packages("sp")
if (!require(spdep)) install.packages("spdep")
if (!require(gstat)) install.packages("gstat")
if (!require(splancs)) install.packages("splancs")
if (!require(spatstat)) install.packages("spatstat")
if (!require(pgirmess)) install.packages("pgirmess")
if (!require(RColorBrewer)) install.packages("RColorBrewer")
if (!require(classInt)) install.packages("classInt")
if (!require(spgwr)) install.packages("spgwr")
if (!require(spgwr)) install.packages("spgwr")
library(maps)         ## Projections
library(maptools)     ## Data management
library(sp)           ## Data management
library(spdep)        ## Spatial autocorrelation
library(gstat)        ## Geostatistics
library(splancs)      ## Kernel Density
library(spatstat)     ## Geostatistics
library(pgirmess)     ## Spatial autocorrelation
library(RColorBrewer) ## Visualization
library(classInt)     ## Class intervals
library(spgwr)        ## GWR
45/0.157
468/2980
install.packages("text2vec")
# 相似性
library(stringr)
library(text2vec)
data("movie_review")
# select 500 rows for faster running times
movie_review = movie_review[1:500, ]
prep_fun = function(x) {
x %>%
# make text lower case
str_to_lower %>%
# remove non-alphanumeric symbols
str_replace_all("[^[:alnum:]]", " ") %>%
# collapse multiple spaces
str_replace_all("\\s+", " ")
}
movie_review$review_clean = prep_fun(movie_review$review)
#定义两个文档：
doc_set_1 = movie_review[1:300, ]
it1 = itoken(doc_set_1$review_clean, progressbar = FALSE)
# specially take different number of docs in second set
doc_set_2 = movie_review[301:500, ]
it2 = itoken(doc_set_2$review_clean, progressbar = FALSE)
#1、Jaccard距离
dtm1 = create_dtm(it1, vectorizer)
#1、Jaccard距离
vectorizer = hash_vectorizer(2 ^ 18, c(1L, 2L))
dtm1 = create_dtm(it1, vectorizer)
dtm2 = create_dtm(it2, vectorizer)
d1_d2_jac_sim = sim2(dtm1, dtm2, method = "jaccard", norm = "none")
d1_d2_jac_sim
#生成了一个300*200的相似性矩阵。
dtm1_2 = dtm1[1:200, ]
dtm2_2 = dtm2[1:200, ]
d1_d2_jac_psim = psim2(dtm1_2, dtm2_2, method = "jaccard", norm = "none")
str(d1_d2_jac_psim)
#生成了一个200个数值的相似性系数。
#2、cosine距离
d1_d2_cos_sim = sim2(dtm1, dtm2, method = "cosine", norm = "l2")
??consine
install.packages("sos")
library(sos)
findFn("cosine", maxPages=2, sortby="MaxScore")
install.packages("LSAfun")
library("LSAfun")
data(wonderland)
Cosine("alice","rabbit",tvectors=wonderland)
View(wonderland)
libray(lsa)
library(lsa)
cosine("alice","rabbit")
vec1 = c( 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
vec2 = c( 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0 )
cosine(vec1,vec2)
#2、cosine距离
d1_d2_cos_sim = sim2(dtm1, dtm2, method = "cosine", norm = "l2")
d1_d2_cos_sim
#3、Euclidean 距离
x = dtm_tfidf_lsa[1:300, ]
y = dtm_tfidf_lsa[1:200, ]
19*16
12*60
options(baidumap.key = '9c9978a893e2dd6c3be3d3241f8e8f61')
library(baidumap)
library(ggmap)
#查找北京的大学
bj_college = getPlace('大学','北京')
head(bj_college)
bj_college = getPlace('盲人按摩','北京')
head(bj_mersage)
head(bj_college)
library(REmap)
remapB(markPointData = data.frame(bj_college$name),
markPointTheme = markPointControl(symbol = "pin",
effect=F,
symbolSize = 5,
color="red"),
geoData = bj_college)
remapB(markPointData =bj_college$name,
markPointTheme = markPointControl(symbol = "pin",
effect=F,
symbolSize = 5,
color="red"),
geoData = bj_college)
library(ggmap)
q <- get_map("北京",zoom = 9,  source = "stamen",maptype = "toner")
q <- get_map("北京",zoom = 9,  source = "stamen",maptype = "toner")
#作图
p <- ggmap(q) +
geom_point(data = bj_college, aes(lon, lat)) +
theme(text = element_text(family = "STKaiti"))
p
q <- get_map("北京",zoom = 11,  source = "stamen",maptype = "toner")
#作图
p <- ggmap(q) +
geom_point(data = bj_college, aes(lon, lat)) +
theme(text = element_text(family = "STKaiti"))
p
bj_college = getPlace('大学','北京')
head(bj_college)
#google地图获取需要使用北大的vpn，人大的vpn不可用
library(ggmap)
q <- get_map("北京",zoom = 11,  source = "stamen",maptype = "toner")
#作图
ggmap(q) +
geom_point(data = bj_college, aes(lon, lat)) +
theme(text = element_text(family = "STKaiti"))
bj_mersage = getPlace('洗脚','北京')
head(bj_mersage)
ggmap(q) +
geom_point(data = bj_college, aes(lon, lat)) +
theme(text = element_text(family = "STKaiti"))
ggmap(q) +
geom_point(data =bj_mersage , aes(lon, lat)) +
theme(text = element_text(family = "STKaiti"))
bj_mersage = getPlace('足浴','北京')
ggmap(q) +
geom_point(data =bj_mersage , aes(lon, lat)) +
theme(text = element_text(family = "STKaiti"))
bj_mersage = getPlace('足浴','海淀')
ggmap(q) +
geom_point(data =bj_mersage , aes(lon, lat)) +
theme(text = element_text(family = "STKaiti"))
bj_mersage = getPlace('足浴','中关村')
ggmap(q) +
geom_point(data =bj_mersage , aes(lon, lat)) +
theme(text = element_text(family = "STKaiti"))
bj_mersage = getPlace('足浴','北京市朝阳区')
ggmap(q) +
geom_point(data =bj_mersage , aes(lon, lat)) +
theme(text = element_text(family = "STKaiti"))
hd_mersage = getPlace('足浴','北京市海淀区')
cy_mersage = getPlace('足浴','北京市朝阳区')
tz_mersage = getPlace('足浴','北京市通州区')
cp_mersage = getPlace('足浴','北京市昌平区')
sj_mersage = getPlace('足浴','北京市石景山区')
ft_mersage = getPlace('足浴','北京市丰台区')
dx_mersage = getPlace('足浴','北京市大兴区')
dc_mersage = getPlace('足浴','北京市东城区')
xc_mersage = getPlace('足浴','北京市西城区')
cy_mersage = getPlace('足浴','北京市朝阳区')
tz_mersage = getPlace('足浴','北京市通州区')
cp_mersage = getPlace('足浴','北京市昌平区')
sj_mersage = getPlace('足浴','北京市石景山区')
ft_mersage = getPlace('足浴','北京市丰台区')
dx_mersage = getPlace('足浴','北京市大兴区')
dc_mersage = getPlace('足浴','北京市东城区')
xc_mersage = getPlace('足浴','北京市西城区')
mersage <- rbind(hd_mersage,cy_mersage,tz_mersage,cp_mersage,sj_mersage,ft_mersage,dx_mersage,dc_mersage,xc_mersage)
ggmap(q) +
geom_point(data =mersage , aes(lon, lat)) +
theme(text = element_text(family = "STKaiti"))
write.csv(mersage,"/Users/liding/E/Bdata/rtemp/data/massage.csv")
devtools::install_github("dvanclev/GTrendsR")
devtools::install_github("trinker/gtrend")
# 用R绘制google趋势
# install necessary packages
devtools::install_github("dvanclev/GTrendsR")
# 用R绘制google趋势
# install necessary packages
#hubte1g/GTrendsR
devtools::install_github("hubte1g/GTrendsR")
# load the packages
library(curl)
library(dplyr)
library(gtrend)
library(ggplot2)
install.packages("dplyr")
library(dplyr)
0.218 /（0.218 + 1.009）
0.218/(0.218 + 1.009)
730+600+30
730+600+60
22.4、36.7
22.4/36.7
library(gganimate)
library(ggplot2)
library(readr)
gapminder <- read.csv("../data/gapminder.csv")
gapminder <- subset(gapminder,gdpPercap<60000)
gapminder_plot <- ggplot(gapminder) +
aes(x = gdpPercap, y = lifeExp, colour = continent, size = pop,
frame = year) +
geom_point(alpha = 0.6) +
theme(aspect.ratio=9/16) +theme_bw()
gganimate(gapminder_plot,
convert='gm convert',ani.width = 960, ani.height = 540,interval=1.5,
filename = "../pic/gapminder-gganimate.gif")
gganimate(gapminder_plot,
convert='gm convert',ani.width = 960, ani.height = 540,interval=1.5,
filename = "../pic/gapminder-gganimate.gif")
library(gganimate)
gganimate(gapminder_plot,
convert='gm convert',ani.width = 960, ani.height = 540,interval=1.5,
filename = "../pic/gapminder-gganimate.gif")
install.packages("gganimate")
devtools::install_github('thomasp85/gganimate')
library(gganimate)
gganimate(gapminder_plot,
convert='gm convert',ani.width = 960, ani.height = 540,interval=1.5,
filename = "../pic/gapminder-gganimate.gif")
animate(gapminder_plot,
convert='gm convert',ani.width = 960, ani.height = 540,interval=1.5,
filename = "../pic/gapminder-gganimate.gif")
animate(gapminder_plot,
convert='gm convert')
animate(gapminder_plot)
library(gapminder)
install.packages("gapminder")
library(gapminder)
library(gganimate)
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~continent) +
# Here comes the gganimate specific bits
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(year) +
ease_aes('linear')
city  <- c('beijing','shanghai','chengdu','shanghai','beijing')
age <- c(23,43,51,32,60)
gender <- c('F','M','F','F','M')
people <- data.frame(city,age,gender)
city  <- c('beijing','shanghai','chengdu','shanghai','beijing')
age <- c(23,43,51,32,60)
gender <- c('F','M','F','F','M')
data <- data.frame(city,age,gender)
str(data[2])
str(data[,2])
str(data[,2:3])
class(data[,2:3])
class(data[,2])
ls()
rm(list=ls())
ls()
seq(2,10,2)
?seguence
?sequence
rep(1:4, each = 2, len = 4)
help filter
?filter
library(nycflights13)
library(tidyverse)
filter(flights,between(dep_time,0,600))
filter(flights,between(dep_time,,Inf))
filter(flights,between(dep_time,0,Inf))
vect=c(1,1,1,2,2,2,2,3,3,3,3,3,4)
n=ave(1:length(vect), vect, FUN = seq_along)
n
ave(1:length(vect), vect, FUN = length)
ggplot(data=mpg)+
geom_point(mapping=aes(x=displ,y=hwy)) +
facet_wrap(~displ,nrow=2)
x <- 0
for (i in 1:10){}
for (i in 1:10){
if(i%%2!=0){
x=x+i
}
}
for (i in 1:10){
if(i%%2!=0){
x=x+i
}
}
x
for (i in 1:10){
if(i%%2!=0)
}
x<-na
for (i in 1:10){
if(i%%2!=0) {
x=c(x,i)
}
}
x
x<-null
for (i in 1:10){
if(i%%2!=0) {
x=c(x,i)
}
}
x
x<-0
for (i in 1:10){
if(i%%2!=0) {
x=c(x,i)
}
}
x
sum(seq(1,100,by=2))
fibonaci <- function(n) {
i <- 2
x <- 1:2
while (x[i] < n) {
x[i+1] <- x[i-1] + x[i]
i <- i + 1
}
x <- x[-i]
return(x)
}
fibonaci
lm
fibonaci(1000)
iris
library(tidyverse)
library(tidyverse)
df <- tibble(
x = 1:5,
y = 1,
z = x ^ 2 + y
)
df
df %>% .$x
df$x
df %>% .$x
df[[x]]
df[x]
str(df)
df$x
df[['x']]
x <- 1:5
y <- 1
df <- data.frame(x,y)
df
df$z <- x^2+y
df
as_tibble(df)
df <- data.frame(x,y,z=x^2+y)
df
setwd("/Users/liding/E/Bdata/liding17/2018R/l05dm")
bike <- read_delim("../data/nc_bike_crash.csv", ";",
escape_double = FALSE, trim_ws = TRUE)
View(bike)
bike %>%
filter(County == "Durham")
bike_durham <- bike %>%
filter(County="Durham")
bike_durham <- bike %>%
filter(County=="Durham")
bike_durham <- bike %>%
filter(County=="Durham") %>%
ggplot(aes(x=Bike_age,y=Drvr_Age)) +
geom_point()
bike_durham
bike %>%
filter(County=="Durham") %>%
ggplot(aes(x=Bike_age,y=Drvr_Age)) +
geom_point()
bike %>%
ggplot(aes(x=Bike_Age,y=Drvr_Age)) +
ggplot(aes(x=Bike_age,y=Drvr_Age)) +
geom_point()
bike %>%
ggplot(aes(x=Bike_age,y=Drvr_Age)) +
geom_point()
bike %>%
ggplot(aes(x=Bike_Age,y=Drvr_Age)) +
geom_point()
bike %>%
filter(County=="Durham") %>%
ggplot(aes(x=Bike_Age,y=Drvr_Age)) +
geom_point()
nrow(bike)
lstrow <- nrow(bike)
slice(bike,1:5)
slice(bike,(lstrow-4):lstrow)
bike %>%
slice(1:5)
bike %>%
select(Crash_Loc, Hit_Run) %>%
table()
summarize(Bike_Age)
summarize(bike$Bike_Age)
summarize(n=bike$Bike_Age)
summarize(bike,min=min(Bike_Age,na.rm=TRUE)
)
bike %>%
mutate(Bike_birth=Crash_Year - Bike_Age,
Drvr_birth=Crash_Year - Drvr_Age)
bike
bike <- bike %>%
mutate(DrvrAge_Gr = fct_recode(DrvrAge_Gr,"70+"="70"))
table(bike$DrvrAge_Gr)
?read_delim
library(catspec)
install.packages("catspec")
library(catspec)
ctab(with(x, table(grade,M_part)), type = c('n','r'))
ctab(with(bike, table(AmbulanceR,Bike_Race)), type = c('n','r'))
ctab(with(bike, table(AmbulanceR,Bike_Race)), type = c('n','r'))
ctab(with(bike, table(AmbulanceR,Bike_Race)), type = c('n','r'))
ctab(with(bike, table(Bike_Race,AmbulanceR)), type = c('n','r'))
ctab(with(bike, table(Bike_Race,AmbulanceR)), type = c('n'))
ctab(with(bike, table(Bike_Race,AmbulanceR)), type = c('r'))
ctab(with(Mroz, table(wc,hc)), type = 'r')
63.3-16.8
options(width=60)
library(nlme)
library(lme4)
library(lattice)
options(show.signif.stars = FALSE)
sciach<-read.table("http://faculty.smu.edu/kyler/courses/7309/sciach.txt", header=T)
str(sciach)
sciach$GROUP<-factor(sciach$GROUP)
mean(sciach$SCIENCE)
with(sciach, tapply(SCIENCE, GROUP, mean))
anova(aov(SCIENCE~GROUP, sciach))
m0<-lme(SCIENCE~1, random=~1|GROUP, sciach)
summary(m0)
cbind(means=with(sciach, tapply(SCIENCE, GROUP, mean)), coef(m0))
par(mfrow=c(1,2))
boxplot(resid(m0)~GROUP, sciach, horizontal=T, main="Homogeneity of Variance")
qqnorm(resid(m0), main="QQplot for Null Model")
m.lm<-lm(SCIENCE~URBAN, sciach)
summary(m.lm)
plot(SCIENCE~URBAN, sciach)
abline(lm(SCIENCE~URBAN, sciach))
m1<-lme(SCIENCE~URBAN, random=~1|GROUP, sciach)
summary(m1)
anova(m0,m1)
Model3.0 <- lme(fixed = geread~1, random = ~1|school, data =
Achieve)
paste("X", 1:5, sep = ".")
paste("X", 1:5, sep = ".")
paste("X", 1:5, sep = ".", collapse = "")
Sys.Date()
library(tidyverse)
table1 %>%
mutate(rate = cases / population * 10000)
table1 %>%
count(year)
table4b
?table1
library(tidyr)
data(table1,package="tidyr")
str_length(12)
ID <- c(201701,201702,201703)
str_sub(ID,str_length(ID)-2,2)
str_sub(ID,str_length(ID)-3,2)
str_sub(as.character(ID),str_length(ID)-3,2)
str_sub(ID,str_length(ID)-2,str_length(ID))
str_sub(ID,str_length(ID)-1,str_length(ID))
?left
str_sub(ID,str_length(ID),str_length(ID))
