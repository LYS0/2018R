xtabs(~a7a+a2,cgss2013)
xtabs(a7a~a2,cgss2013)
xtabs(id~a7a+a2,cgss2013)
with(cgss2013,table(a7a,a2))
margin.table(table(cgss2013$a7a,cgss2013$a2),1)
addmargins(table(cgss2013$a7a,cgss2013$a2))
ftable(~a7a+a2,cgss2013)
ftable(cgss2013$a7a,cgss2013$a2)
ftable(table(cgss2013$a7a,cgss2013$a2) )
ftable(cgss2013$a7a,cgss2013$a2)
xtabs(~a7a+a2,cgss2013)
Aye <- sample(c("Yes", "Si", "Oui"), 177, replace = TRUE)
Bee <- sample(c("Hum", "Buzz"), 177, replace = TRUE)
Sea <- sample(c("White", "Black", "Red", "Dead"), 177, replace = TRUE)
(A <- table(Aye, Bee, Sea))
addmargins(A)
ftable(A)
ftable(addmargins(A))
ftable(addmargins(A, c(1, 3),
FUN = list(Sum = sum, list(Min = min, Max = max))))
ftable(addmargins(A, c(3, 1),
FUN = list(list(Min = min, Max = max), Sum = sum)))
tab <- table(cgss2013$a7a,cgss2013$a2)
Rcmdr::colPercents(tab, digits=1)
install.packages("Rcmdr")
prop.table(addmargins(table(cgss2013$a7a,cgss2013$a2), 2))
# 下面这种算法是错误的
prop.table(addmargins(table(cgss2013$a7a,cgss2013$a2), 1))
addmargins(prop.table(table(cgss2013$a7a,cgss2013$a2), 2))
library(sjPlot)
library(sjmisc)
sjt.frq(cgss2013$a7a)
frq(cgss2013$a7a)
sjt.frq(cgss2013$a7a)
frq(cgss2013$a7a)
frq(cgss2013$a7a)
sjt.frq(cgss2013$a7a,encoding = 'utf-8',
show.skew = TRUE,
show.kurtosis = TRUE);
sjt.xtab(cgss2013$a7a,cgss2013$a2,
show.obs = TRUE, show.cell.prc = FALSE, show.col.prc = TRUE)
sjt.xtab(cgss2013$a7a,cgss2013$a2,
show.obs = FALSE, show.cell.prc = FALSE, show.col.prc = TRUE)
sjp.xtab(cgss2013$a2,cgss2013$a10, type ="bar", margin ="row",
bar.pos = "stack")
view_df(cgss2013)
cor(cgss2013$a8a,cgss2013$a8b,use="complete.obs")
par(family="STKaiti")
plot(cgss2013$a8a,cgss2013$a8b)
frq(cgss2013$a7a)
frq(cgss2013$a7a,out ="viewer")
frq(cgss2013$a7a,encoding = 'utf-8',
show.skew = TRUE,
show.kurtosis = TRUE);
flat_table(cgss2013$a7a,cgss2013$a2)
flat_table(cgss2013,a7a,a2,margin="row")
flat_table(cgss2013,a7a,a2,margin="counts")
flat_table(cgss2013,a7a,a2,margin="row")
flat_table(cgss2013,a7a,a2,margin="row",show.values = TRUE)
sjt.xtab(cgss2013$a7a,cgss2013$a2,
show.obs = TRUE, show.cell.prc = FALSE, show.col.prc = TRUE)
sjt.xtab(cgss2013$a7a,cgss2013$a2,
show.obs = TRUE, show.cell.prc = FALSE, show.col.prc = TRUE,title="分性别的教育分布情况")
chisq.test(cgss2013$a7a,cgss2013$a2)
summary(table(cgss2013$a2, cgss2013$a7a))
ch01 <- chisq.test(cgss2013$a7a,cgss2013$a2)
ch01$residuals
chisq.test(cgss2013$a7a,cgss2013$a2)$expected
chisq.test(cgss2013$a7a,cgss2013$a2)$resid
mytable<-xtabs(~cgss2013$a7a+cgss2013$a2)
chisq.test(mytable)
fisher.test(mytable)
fisher.test(mytable)
LRstats=function(data){
G2=2*sum(data*log(data/chisq.test(data)$expected))
G2pvalue=1-pchisq(G2,df=(dim(data)[1]-1)*(dim(data)[2]-1))
ans=c(G2,G2pvalue)
ans
}
LRstats(mytable)
mytable<-xtabs(~cgss2013$a7a+cgss2013$a2)
chisq.test(mytable
)
LRstats(mytable)
# 二手列联表分析
observed <- matrix(c(32, 24, 265, 199, 391, 287),nrow = 3, byrow = T)
observed
chisq.test(observed, correct = F)
cbind(observed, chisq.test(observed)$expected)
cbind(observed, chisq.test(observed)$resid)
# One sample t test
t.test(cgss2013$a8a, mu=25000)
t.test(cgss2013$a8a, mu=25000,alternative ='less')
is a binary factor
t.test(a8a ~ a2, data = cgss2013)
var.test(a8a ~ a2, data = cgss2013)
t.test(cgss2013$a8a, cgss2013$a8b, paired = TRUE)
tResults <- t.test(cgss2013$a8a, cgss2013$a8b, paired = TRUE)
summary(tResults)
tResults$statistic
tResults['statistic']
cholest <- data.frame(chol = c(245, 170, 180,190, 200, 210, 220, 230, 240, 250, 260, 185,205, 160, 170, 180, 190, 200, 210, 165), gender = rep(c("female","male"), c(12, 8)))
str(cholest)
cholest
boxplot(chol ~ gender, cholest, ylab = "Cholesterol Score")
par(mfrow = c(1, 2))
qqnorm(cholest$chol[cholest$gender == "male"],
main = "QQNorm for the Males")
qqnorm(cholest$chol[cholest$gender == "female"],
main = "QQNorm for the Females")
# 方差相等
var.test(chol ~ gender, cholest)
# 均值相等
t.test(chol ~ gender, cholest)
#C、anova
par(family="STKaiti")
par(mfrow = c(1, 1))
boxplot(a8a~a7a,data=cgss2013)
edu_inc <- cgss2013 %>% group_by(a7a) %>%
summarize(meaninc = mean(a8a, na.rm = TRUE))
ggplot(edu_inc,aes(x=a7a,y=meaninc)) +
geom_bar(stat = "identity")
aov_inc <- aov(a8a ~ a7a , data = cgss2013)
summary(aov_inc)
aov_inc
plot(aov_inc)
TukeyHSD(aov_inc)
fit <- aov(a8a ~ a7a + a2 + a7a:a2, data = cgss2013)
fit
fit <- aov(a8a ~ a7a*a2, data = cgss2013)
fit
aov(a8a ~ a3a + a2, data = cgss2013)
aov(a8a ~ a3a * a2, data = cgss2013)
qf(0.95, 4, 45)
lm_inc <- lm(a8a ~ I(2013-a3a) + a2, data = cgss2013)
summary(lm_inc)
anova(lm_inc)
par(mfrow = c(2, 2))
plot(lm_inc)
confint(lm_inc)
set.seed(1)
x <- seq(1,5,length.out=100)
noise <- rnorm(n =100, mean =0, sd = 1)
beta0 <- 1
beta1 <- 2
y <- beta0+ beta1*x +noise
plot(y ~ x)
model <- lm(y ~x)  # 生成了一个model 对象
plot(y~x)
abline(model)
###回归模型的输出结果
summary(model)
model.matrix(model)
names(model)
ybar <- mean(y)
yPred <- model$fitted.values
Rsquared <- sum((yPred-ybar)^2)/sum((y-ybar)^2)
sqrt(sum(model$residuals^2)/98)
par(mfrow = c(1, 1))
plot(y ~ x)
model <- lm(y ~x)  # 生成了一个model 对象
plot(y~x)
abline(model)
yConf <- predict(model,interval= 'confidence')
yPred <- predict(model,interval= 'prediction')
plot(y~x,col='grey',pch=16)
yConf <- as.data.frame(yConf)
yPred <- as.data.frame(yPred)
lines(yConf$lwr~x,col='black',lty=3)
lines(yConf$upr~x,col='black',lty=3)
lines(yPred$lwr~x,col='black',lty=2)
lines(yPred$upr~x,col='black',lty=2)
lines(yPred$fit~x,col='black',lty=1)
set.seed(1)
x <- factor(rep(c(0,1),each=30))
y <- c(rnorm(30,0,1),rnorm(30,1,1))
plot(y~x)
model <- lm(y~x)
summary(model)
model.matrix(model)
set.seed(1)
x<-seq(1,5,length.out=100)
noise<-rnorm(n=100,mean=0,sd=1)
beta0<-1
beta1<-2
y<-beta0+beta1*x^2+noise
model<-lm(y~x)
summary(model)
plot(y~x)
abline(model)
## 呈现异方差
plot(model$residuals~x)
## 增加二次项、
model2<-lm(y~x+I(x^2))
summary(model2)
plot(model2$residuals~x)
## 剔除一次项再回归
model3<- update(model2, y ~ . -x)
summary(model3)
plot(model3$residuals~x)
AIC(model,model2,model3)
############
# 在R中模拟异方差
set.seed(123456)
x = rnorm(500,1,1)
b0 = 1 # intercept chosen at your choice
b1 = 1 # coef chosen at your choice
h = function(x) 1+.4*x # h performs heteroscedasticity function (here
#I used a linear one)
eps = rnorm(500,0,h(x))
y = b0 + b1*x + eps
plot(x,y)
abline(lsfit(x,y))
abline(b0,b1,col=2)
par(mfrow = c(1, 1))
x <- seq(-4, 4, length = 100)
y1 <- dnorm(x)
plot(x, y1, type = "l", lwd = 2, col = "blue")
y2 <- dnorm(x, m = 0, sd = 2)
lines(x, y2, type = "l", lwd = 2, col = "red")
pnorm(1.96)
pnorm(1.96, lower.tail = FALSE)
qnorm(0.95) # p = .05, one-tailed (upper)
qnorm(c(0.025, 0.975)) # p = .05, two-tailed
library(haven)
library(tidyverse)
setwd("/Users/liding/E/Bdata/liding17/2018R/data/")
cgss2013 <- read_spss("cgss2013.sav")
des <- function (dfile) {
lbl = sapply(dfile, attr, 'label')
if (is.list(lbl)) {
lbl[sapply(lbl, is.null)] = ''
lbl[sapply(lbl, length) > 1] = ''
lbl = unlist(lbl)
}
Encoding(lbl) = 'UTF-8'
dfile_var = data.frame(var =names(dfile), lbl = lbl)
View(dfile_var)
}
des(cgss2013)
#替换用户定义缺失值为系统缺失值
cgss2013[cgss2013==-1] <- NA
cgss2013[cgss2013==-2] <- NA
cgss2013[cgss2013==-3] <- NA
cgss2013[cgss2013==9999997] <- NA
cgss2013[cgss2013==9999998] <- NA
cgss2013[cgss2013==9999999] <- NA
# 删除没有用到的取值标签
cgss2013 <- sjlabelled::drop_labels(cgss2013)
标签的变量仍然为labelled类型
cgss2013 <- sjmisc::to_label(cgss2013)
w <- which(sapply(cgss2013, class) == 'labelled')
cgss2013[w]<- lapply(cgss2013[w], function(x) as.numeric(as.character(x)))
dim(cgss2013)
summary(cgss2013$a8a)
mean(cgss2013$a8a, na.rm = TRUE)
median(cgss2013$a8a, na.rm = TRUE)
sd(cgss2013$a8a, na.rm = TRUE)
quantile(cgss2013$a8a, na.rm = TRUE)
table(cgss2013$a2)
prop.table(table(cgss2013$a2))
prop.table(table(cgss2013$a7a))
as.data.frame(prop.table(table(cgss2013$a7a)))
as.data.frame(prop.table(table(cgss2013$a7a)))
ddata <- as.data.frame(prop.table(table(cgss2013$a7a)))
View(ddata)
table(cgss2013$a7a,cgss2013$a2)
ftable(cgss2013$a7a,cgss2013$a2)
with(cgss2013,table(a7a,a2))
xtabs(~a7a+a2,cgss2013)
xtabs(1~a7a+a2,cgss2013)
prop.table(table(cgss2013$a7a,cgss2013$a2), 1)
prop.table(table(cgss2013$a7a,cgss2013$a2), 2)
margin.table(table(cgss2013$a7a,cgss2013$a2),1)
addmargins(table(cgss2013$a7a,cgss2013$a2))
prop.table(addmargins(table(cgss2013$a7a,cgss2013$a2), 1))
addmargins(table(cgss2013$a7a,cgss2013$a2), 1)
addmargins(table(cgss2013$a7a,cgss2013$a2)
,1)
# 下面这种算法是错误的
addmargins(table(cgss2013$a7a,cgss2013$a2), 1)
atable <- addmargins(table(cgss2013$a7a,cgss2013$a2), 1)
prop.table(atable)
addmargins(prop.table(table(cgss2013$a7a,cgss2013$a2), 2))
addmargins(prop.table(table(cgss2013$a7a,cgss2013$a2), 2))
library(sjPlot)
library(sjmisc)
frq(cgss2013$a7a)
frq(cgss2013$a7a,out ="viewer")
sjt.frq(cgss2013$a7a) # 旧命令
sjt.frq(cgss2013$a7a,encoding = 'utf-8',
show.skew = TRUE,
show.kurtosis = TRUE);
sjt.xtab(cgss2013$a7a,cgss2013$a2,
show.obs = TRUE, show.cell.prc = FALSE, show.col.prc = TRUE,title="分性别的教育分布情况")
sjt.xtab
flat_table(cgss2013,a7a,a2,margin="row")
flat_table(cgss2013,a7a,a2,margin="col")
sjp.xtab(cgss2013$a2,cgss2013$a10, type ="bar", margin ="row",
bar.pos = "stack")
view_df(cgss2013[,550:577], show.frq = TRUE, show.prc = TRUE)
cor(cgss2013$a8a,cgss2013$a8b,use="complete.obs")
par(family="STKaiti")
plot(cgss2013$a8a,cgss2013$a8b)
chisq.test(cgss2013$a7a,cgss2013$a2)
summary(table(cgss2013$a2, cgss2013$a7a))
table(cgss2013$a2, cgss2013$a7a)
dim(table(cgss2013$a2, cgss2013$a7a))
ch01 <- chisq.test(cgss2013$a7a,cgss2013$a2)
str(ch01)
ch01$residuals
chisq.test(cgss2013$a7a,cgss2013$a2)$expected
ch01$expected
chisq.test(cgss2013$a7a,cgss2013$a2)$resid
mytable<-xtabs(~cgss2013$a7a+cgss2013$a2)
chisq.test(mytable)
observed <- matrix(c(32, 24, 265, 199, 391, 287),nrow = 3, byrow = T)
observed
chisq.test(observed, correct = F)
cbind(observed, chisq.test(observed)$expected)
cbind(observed, chisq.test(observed)$resid)
t.test(cgss2013$a8a, mu=25000)
t.test(cgss2013$a8a, mu=24000)
t.test(cgss2013$a8a, mu=25000,alternative ='less')
t.test(a8a ~ a2, data = cgss2013)
var.test(a8a ~ a2, data = cgss2013)
t.test(cgss2013$a8a, cgss2013$a8b, paired = TRUE)
cholest <- data.frame(chol = c(245, 170, 180,190, 200, 210, 220, 230, 240, 250, 260, 185,205, 160, 170, 180, 190, 200, 210, 165), gender = rep(c("female","male"), c(12, 8)))
str(cholest)
cholest
boxplot(chol ~ gender, cholest, ylab = "Cholesterol Score")
aov_inc <- aov(a8a ~ a7a , data = cgss2013)
summary(aov_inc)
aov_inc
ingram<-read.table("http://faculty.smu.edu/kyler/courses/7309/ingram.txt", header=T)
library(sem)
install.packages("sem")
library(sem)
#### Run a linear model with Attitude and SubNorm predicting Intent
summary(m1<-lm(Intent~Attitude+SubNorm, ingram))
ingram.simple<-specify.model()
ingram.simple<-specify.model()
?specifyModel
ingram.simple<-specifyModel()
?specifyEquations
ingram.simple<-specifyEquations()
ingram.simple<-specifyEquations()
ingram.simple<-specifyModel()
?specifyEquations
sem.simple<-sem(ingram.simple, cov(ingram), 60)
summary(sem.simple)
sd(ingram)^2
sd(m1$res)^2
summary(m1<-lm(Intent~Attitude+SubNorm, ingram))
sd(ingram)^2
ingram
sd(ingram.simple)^2
sd(sem.simple)^2
summary(lm(Intent~Attitude*SubNorm, ingram))
ingram2<-data.frame(ingram)
ingram2$AttSub<-ingram2$Attitude*ingram2$SubNorm
ingram.interact<-specifyModel()
sem.interact <-sem(ingram.interact, cov(ingram2), 60)
summary(sem.interact)
ingram.mediate<-specify.model()
sem.mediate<-sem(ingram.mediate, cov(ingram), 60)
summary(sem.mediate)
ingram.model<-specify.model()
sem.ingram<-sem(ingram.model, cor(ingram), 60)
summary(sem.ingram)
obs.var2.5 = c('Ach1',  'Ach2',  'Amb1',  'Amb2',  'Amb3')
R.prob2.5 = matrix(c(
1.00 ,  .60  , .30,  .20,   .20,
.60,  1.00,   .20,   .30,   .10,
.30,   .20,  1.00,   .70,   .60 ,
.20,   .30,   .70,  1.00,   .50,
.20,   .10,   .60,  .50,  1.00), ncol=5,byrow=TRUE)
model2.5=matrix(c(
'Ambit ->  Amb1',      'a', NA,
'Ambit -> Amb2' ,      'b', NA,
'Ambit -> Amb3' ,      'c', NA,
'Achieve -> Ach1',     'd', NA,
'Achieve -> Ach2',     'e', NA,
'Ambit <-> Achieve',   'f', NA,
'Amb1 <-> Amb1' ,      'u', NA,
'Amb2 <-> Amb2' ,      'v', NA,
'Amb3 <-> Amb3' ,      'w', NA,
'Ach1 <-> Ach1' ,      'x', NA,
'Ach2 <-> Ach2' ,      'y', NA,
'Achieve <-> Achieve',  NA, 1,
'Ambit <-> Ambit',      NA, 1),
ncol=3, byrow=TRUE)
sem2.5= sem(model2.5,R.prob2.5,60, obs.var2.5)
model2.5=matrix(c(
'Ambit ->  Amb1',      'a', NA,
'Ambit -> Amb2' ,      'b', NA,
'Ambit -> Amb3' ,      'c', NA,
'Achieve -> Ach1',     'd', NA,
'Achieve -> Ach2',     'e', NA,
'Ambit <-> Achieve',   'f', NA,
'Amb1 <-> Amb1' ,      'u', NA,
'Amb2 <-> Amb2' ,      'v', NA,
'Amb3 <-> Amb3' ,      'w', NA,
'Ach1 <-> Ach1' ,      'x', NA,
'Ach2 <-> Ach2' ,      'y', NA,
'Achieve <-> Achieve',  NA, 1,
'Ambit <-> Ambit',      NA, 1),
ncol=3, byrow=TRUE)
sem2.5= sem(model2.5,R.prob2.5,60, obs.var2.5)
summary(sem2.5,digits=3)
sem2.5= sem(model2.5,R.prob2.5,60, Obs.var2.5)
sem2.5= sem(model2.5,R.prob2.5,60, obs.var2.5)
obs.var2.5 = c('Ach1',  'Ach2',  'Amb1',  'Amb2',  'Amb3')
sem2.5= sem(model2.5,R.prob2.5,60, obs.var2.5)
model2.51=matrix(c(
'Ambit ->  Amb1',      'a', NA,
'Ambit -> Amb2' ,      'b', NA,
'Ambit -> Amb3' ,      'c', NA,
'Achieve -> Ach1',     'd', NA,
'Achieve -> Ach2',     'e', NA,
'Ambit -> Achieve',   'f', NA,
'Amb1 <-> Amb1' ,      'u', NA,
'Amb2 <-> Amb2' ,      'v', NA,
'Amb3 <-> Amb3' ,      'w', NA,
'Ach1 <-> Ach1' ,      'x', NA,
'Ach2 <-> Ach2' ,      'y', NA,
'Achieve <-> Achieve',  NA, 1,
'Ambit <-> Ambit',      NA, 1),
ncol=3, byrow=TRUE)
sem2.51= sem(model2.51,R.prob2.5,100, obs.var2.5)
summary(sem2.51,digits=3)
obs.var2.5 = c('Ach1',  'Ach2',  'Amb1',  'Amb2',  'Amb3')
sem2.5= sem(model2.5, R.prob2.5,60, obs.var2.5)
install.packages("semPlot")
###Load Libraries
library(semPlot)
library(lavaan)
library(qgraph)
data(PoliticalDemocracy)
PD<-PoliticalDemocracy
head(PD)
model <- '
# measurement model
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2 + y3 + y4
dem65 =~ y5 + y6 + y7 + y8
# regressions
dem60 ~ ind60
dem65 ~ ind60 + dem60
# residual correlations
y1 ~~ y5
y2 ~~ y4
y2~~ y6
y3 ~~ y7
y4 ~~ y8
y6 ~~ y8
'
#fit your SEM
fit <- sem(model, data = PD)
#summarize results
summary(fit, standardized = TRUE, rsq = T)
##plot results using semPaths function in qgraph
semPaths(fit, "std", edge.label.cex = 0.5, curvePivot = TRUE, layout = "tree")
modindices(fit)
##can also look at variance tables
vartable(fit)
#create second alternative model
names(PD)
model2 <- '
# measurement model
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2 + y3 + y4
dem65 =~ y5 + y6 + y7 + y8
# regressions
dem60 ~ ind60
dem65 ~ dem60
#took out ind60 from regression
# residual correlations
y1 ~~ y5
y2 ~~ y4 + y6
y3 ~~ y7
y4 ~~ y8
y6 ~~ y8
'
fit2 <- sem(model2, data = PD)
summary(fit2)
AIC(fit, fit2)
k.dat<-read.csv("/Users/liding/E/Bdata/rtemp/lm_data/Keeley_rawdata_select4.csv")
names(k.dat)
head(k.dat)
mod <- '
rich ~ cover
cover ~ firesev
'
k.dat$cov2<-k.dat$cover^2
mod2<- '
rich ~ cover + cov2
cover ~ firesev
cover ~~ cov2
cov2 ~~ firesev
'
# Fit the model (i.e. est. parameters)
mod1.fit <- sem(mod, data=k.dat)
mod2.fit<- sem(mod2, data=k.dat,fixed.x=FALSE)
#need to rescale data.
vartable(mod1.fit)
k.dat$rich<-k.dat$rich/100
# Output a summary of the computed results - summary of mod2 suggests that both cover and cover squared can impact
summary(mod1.fit, rsq=T)  # rsq=T means output the r-sqr
summary(mod2.fit, rsq=T)
semPaths(mod1.fit, "std", edge.label.cex = 0.5, curvePivot = TRUE, layout = "tree")
semPaths(mod2.fit, "std", edge.label.cex = 0.5, curvePivot = TRUE, layout = "tree")
